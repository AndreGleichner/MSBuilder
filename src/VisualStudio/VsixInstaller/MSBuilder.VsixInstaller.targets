<?xml version="1.0" encoding="utf-8"?>
<!--
	The MIT License (MIT)

	Copyright (c) 2015 Mobile Essentials

	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the "Software"), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:

	The above copyright notice and this permission notice shall be included in all
	copies or substantial portions of the Software.

	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
	SOFTWARE.
-->
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" TreatAsLocalProperty="RootSuffix">
	<Import Project="MSBuilder.VsixInstaller.tasks" />

	<PropertyGroup>
    <!-- Just in case our targets come before the VSSDK ones, we also copy its defaulting of VSSDKTargetPlatformRegRootSuffix -->
    <VSSDKTargetPlatformRegRootSuffix Condition="'$(VSSDKTargetPlatformRegRootSuffix)' == ''">Exp</VSSDKTargetPlatformRegRootSuffix>
    
    <RootSuffix Condition=" '$(RootSuffix)' == '' ">$(VSSDKTargetPlatformRegRootSuffix)</RootSuffix>
		<!-- Clear value if we got a '.' This is possible because of TreatAsLocalProperty above -->
		<RootSuffix Condition=" '$(RootSuffix)' == '.' " />
	</PropertyGroup>

	<Target Name="RootSuffix">
		<Message Importance="high" Text="RootSuffix='$(RootSuffix)'" />
	</Target>
	
	<Target Name="InstallVsix">
		<PropertyGroup>
			<PerMachine Condition=" '$(PerMachine)' == '' ">false</PerMachine>
			<MessageImportance Condition=" '$(MessageImportance)' == '' ">high</MessageImportance>
		</PropertyGroup>
		<InstallVsix VisualStudioVersion="$(VisualStudioVersion)"
					 VsixPath="$(VsixPath)"
					 PerMachine="$(PerMachine)"
					 RootSuffix="$(RootSuffix)"
					 MessageImportance="$(MessageImportance)" />
	</Target>

	<Target Name="UninstallVsix">
		<PropertyGroup>
			<FailIfNotInstalled Condition=" '$(FailIfNotInstalled)' == '' ">true</FailIfNotInstalled>
			<MessageImportance Condition=" '$(MessageImportance)' == '' ">high</MessageImportance>
		</PropertyGroup>
		<UninstallVsix VisualStudioVersion="$(VisualStudioVersion)"
					 VsixId="$(VsixId)"
					 FailIfNotInstalled="$(FailIfNotInstalled)"
					 RootSuffix="$(RootSuffix)"
					 MessageImportance="$(MessageImportance)" />
	</Target>

	<Target Name="EnableVsix">
		<PropertyGroup>
			<FailIfNotInstalled Condition=" '$(FailIfNotInstalled)' == '' ">true</FailIfNotInstalled>
			<MessageImportance Condition=" '$(MessageImportance)' == '' ">high</MessageImportance>
		</PropertyGroup>
		<EnableVsix VisualStudioVersion="$(VisualStudioVersion)"
					VsixId="$(VsixId)"
					FailIfNotInstalled="$(FailIfNotInstalled)"
					RootSuffix="$(RootSuffix)"
					MessageImportance="$(MessageImportance)" />
	</Target>

	<Target Name="DisableVsix">
		<PropertyGroup>
			<FailIfNotInstalled Condition=" '$(FailIfNotInstalled)' == '' ">true</FailIfNotInstalled>
			<MessageImportance Condition=" '$(MessageImportance)' == '' ">high</MessageImportance>
		</PropertyGroup>
		<DisableVsix VisualStudioVersion="$(VisualStudioVersion)"
					 VsixId="$(VsixId)"
					 FailIfNotInstalled="$(FailIfNotInstalled)"
					 RootSuffix="$(RootSuffix)"
					 MessageImportance="$(MessageImportance)" />
	</Target>

	<Target Name="ListVsix" Returns="@(InstalledVsix)">
		<PropertyGroup>
			<MessageImportance Condition=" '$(MessageImportance)' == '' ">high</MessageImportance>
			<VsVersionSuffix Condition=" '$(RootSuffix)' != '' ">($(RootSuffix))</VsVersionSuffix>
		</PropertyGroup>
		<Message Importance="high" Condition=" '$(VsixIdFilter)' == '' And '$(VsixNameFilter)' == '' "
				 Text="ListVsix accepts the following properties for filtering: 
	VisualStudioVersion: which version of Visual Studio to list extensions for. (i.e. '14.0')
	RootSuffix: which instance/suffix to list. (i.e. 'Exp', which is the default, or '.' for the normal hive)
	VsixIdFilter: filter listed extensions with identifiers matching the given regular expression (i.e. 'Microsoft.*')
	VsixNameFilter: filter listed extensions with names matching the given regular expression (i.e. 'SDK')
" />
		<ListVsix VisualStudioVersion="$(VisualStudioVersion)"
				  VsixIdFilter="$(VsixIdFilter)"
				  VsixNameFilter="$(VsixNameFilter)"
				  RootSuffix="$(RootSuffix)">
			<Output TaskParameter="InstalledVsix" ItemName="InstalledVsix" />
		</ListVsix>
		
		<Message Importance="$(MessageImportance)"
				 Text="Found @(InstalledVsix -> Count()) matching VSIXes on Visual Studio $(VisualStudioVersion) $(VsVersionSuffix)"
				 Condition=" '@(InstalledVsix)' != '' "/>
		<Message Importance="$(MessageImportance)" 
				 Condition=" '@(InstalledVsix)' != '' "
				 Text="%(InstalledVsix.Name)
	Id='%(InstalledVsix.Identity)'
	InstalledByMsi=%(InstalledVsix.InstalledByMsi)
	InstalledPerMachine=%(InstalledVsix.InstalledPerMachine)
	State=%(InstalledVsix.State)
	SystemComponent=%(InstalledVsix.SystemComponent)
	Version=%(InstalledVsix.Version)	" />

		<Message Importance="$(MessageImportance)"
				 Text="No VSIXes found matching VsixIdFilter='$(VsixIdFilter)' and VsixNameFilter='$(VsixNameFilter)' on Visual Studio $(VisualStudioVersion) $(VsVersionSuffix)"
				 Condition=" '@(InstalledVsix)' == '' "/>
	</Target>
</Project>